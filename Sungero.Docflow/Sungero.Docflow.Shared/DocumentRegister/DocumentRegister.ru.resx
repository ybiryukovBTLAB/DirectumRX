<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="FormatElementNumbersIsNotUnique" xml:space="preserve">
    <value>В формате номера повторяются элементы.</value>
  </data>
  <data name="NoNumberInNumberFormat" xml:space="preserve">
    <value>Формат номера должен содержать порядковый номер документа.</value>
  </data>
  <data name="NumberOfDigitsError" xml:space="preserve">
    <value>Количество цифр в номере должно быть от  1 до 9.</value>
  </data>
  <data name="BegginingOfLineError" xml:space="preserve">
    <value>"Начало строки" должно быть в единственном экземпляре в начале формата номера.</value>
  </data>
  <data name="EnterNewNextNumber" xml:space="preserve">
    <value>Введите новый номер</value>
  </data>
  <data name="NextNumber" xml:space="preserve">
    <value>Очередной номер</value>
  </data>
  <data name="WrongNextNumberError" xml:space="preserve">
    <value>Значение очередного номера должно быть положительным. Изменения не были внесены.</value>
  </data>
  <data name="NewNextNumberSet" xml:space="preserve">
    <value>Новый очередной номер установлен.</value>
  </data>
  <data name="NewNextNumberRule" xml:space="preserve">
    <value>С указанного номера продолжится нумерация регистрируемых документов</value>
  </data>
  <data name="NewNextNumberNotSet" xml:space="preserve">
    <value>Очередной номер не изменен.</value>
  </data>
  <data name="InNumbersFormatShouldBeNotMoreOneNumbers" xml:space="preserve">
    <value>В формате номера допускается не более одного порядкового номера.</value>
  </data>
  <data name="NoRightToChange" xml:space="preserve">
    <value>Нет прав на изменение текущего журнала регистрации</value>
  </data>
  <data name="NoSpaces" xml:space="preserve">
    <value>Не допускается использование пробелов в номере.</value>
  </data>
  <data name="ForDocumentNumberMustAttendSection" xml:space="preserve">
    <value>В формате номера используется № ведущего документа, но разрез по ведущему документу не установлен.</value>
  </data>
  <data name="NoRightToChangeProperty" xml:space="preserve">
    <value>Нет прав для изменения свойства "{0}".</value>
  </data>
  <data name="SectionsDisabled" xml:space="preserve">
    <value>Разрез и период нумерации закрыты от изменения, так как в этом журнале зарегистрированы документы.</value>
  </data>
  <data name="EnterRegistrationNumber" xml:space="preserve">
    <value>Укажите регистрационный номер.</value>
  </data>
  <data name="LeadingDocument" xml:space="preserve">
    <value>Ведущий документ</value>
  </data>
  <data name="Department" xml:space="preserve">
    <value>Подразделение</value>
  </data>
  <data name="BusinessUnit" xml:space="preserve">
    <value>Наша организация</value>
  </data>
  <data name="NeedFillDepartmentCodes" xml:space="preserve">
    <value>Необходимо заполнить коды подразделений</value>
  </data>
  <data name="NeedFillBusinessUnitCodes" xml:space="preserve">
    <value>Необходимо заполнить коды наших организаций</value>
  </data>
  <data name="NeedFillDocumentKindCodes" xml:space="preserve">
    <value>Необходимо заполнить коды видов документов</value>
  </data>
  <data name="NumberFormatBUCode" xml:space="preserve">
    <value>[Код нашей орг.]</value>
  </data>
  <data name="NumberFormatCaseFile" xml:space="preserve">
    <value>[Индекс дела]</value>
  </data>
  <data name="NumberFormatDepartmentCode" xml:space="preserve">
    <value>[Код подр.]</value>
  </data>
  <data name="NumberFormatDocKindCode" xml:space="preserve">
    <value>[Код вида]</value>
  </data>
  <data name="NumberFormatLeadingNumber" xml:space="preserve">
    <value>[Номер вед. док.]</value>
  </data>
  <data name="NumberFormatLog" xml:space="preserve">
    <value>[Индекс журнала]</value>
  </data>
  <data name="NumberFormatMonth" xml:space="preserve">
    <value>[Месяц]</value>
  </data>
  <data name="NumberFormatNumber" xml:space="preserve">
    <value>[Порядковый номер]</value>
  </data>
  <data name="NumberFormatQuarter" xml:space="preserve">
    <value>[Квартал]</value>
  </data>
  <data name="NumberFormatRegistrPlace" xml:space="preserve">
    <value>[Индекс группы]</value>
  </data>
  <data name="NumberFormatYear" xml:space="preserve">
    <value>[Год]</value>
  </data>
  <data name="ForDocumentNumberMustBeAttendRegisterGroup" xml:space="preserve">
    <value>Для типа журнала "Нумерация" в формате номера невозможно использовать индекс группы регистрации.</value>
  </data>
  <data name="NotUniqueNumber" xml:space="preserve">
    <value>Порядковый номер строки должен быть уникальным</value>
  </data>
  <data name="NumberFormatCounterpartyCode" xml:space="preserve">
    <value>[Код контрагента]</value>
  </data>
  <data name="NumberFormatDay" xml:space="preserve">
    <value>[День]</value>
  </data>
</root>