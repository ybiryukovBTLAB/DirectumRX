<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="FormatElementNumbersIsNotUnique" xml:space="preserve">
    <value>The number format contains duplicate elements.</value>
  </data>
  <data name="NoNumberInNumberFormat" xml:space="preserve">
    <value>Number format should contain sequence number.</value>
  </data>
  <data name="NumberOfDigitsError" xml:space="preserve">
    <value>Number of digits must be between 1 and 9.</value>
  </data>
  <data name="BegginingOfLineError" xml:space="preserve">
    <value>There should be a single "beginning of line" at the start of the number format.</value>
  </data>
  <data name="EnterNewNextNumber" xml:space="preserve">
    <value>Enter a New Number</value>
  </data>
  <data name="NextNumber" xml:space="preserve">
    <value>Next number</value>
  </data>
  <data name="WrongNextNumberError" xml:space="preserve">
    <value>Cannot change next number. The value must be a positive integer. </value>
  </data>
  <data name="NewNextNumberSet" xml:space="preserve">
    <value>New next number set</value>
  </data>
  <data name="NewNextNumberRule" xml:space="preserve">
    <value>Numbering of registrable documents continues from the specified value</value>
  </data>
  <data name="NewNextNumberNotSet" xml:space="preserve">
    <value>New next number not set</value>
  </data>
  <data name="InNumbersFormatShouldBeNotMoreOneNumbers" xml:space="preserve">
    <value>Number format can contain only one sequence number.</value>
  </data>
  <data name="NoRightToChange" xml:space="preserve">
    <value>You are not authorized to edit the current register</value>
  </data>
  <data name="NoSpaces" xml:space="preserve">
    <value>Whitespace is not allowed in the number.</value>
  </data>
  <data name="ForDocumentNumberMustAttendSection" xml:space="preserve">
    <value>Number format includes leading document number, but leading document section is not configured for the register.</value>
  </data>
  <data name="NoRightToChangeProperty" xml:space="preserve">
    <value>You are not authorized to edit property "{0}".</value>
  </data>
  <data name="SectionsDisabled" xml:space="preserve">
    <value>The separator and numbering period cannot be changed because this document register contains registered documents.</value>
  </data>
  <data name="EnterRegistrationNumber" xml:space="preserve">
    <value>Enter the registration number.</value>
  </data>
  <data name="LeadingDocument" xml:space="preserve">
    <value>Leading document</value>
  </data>
  <data name="Department" xml:space="preserve">
    <value>Department</value>
  </data>
  <data name="BusinessUnit" xml:space="preserve">
    <value>Business unit</value>
  </data>
  <data name="NeedFillDepartmentCodes" xml:space="preserve">
    <value>Fill in the department codes.</value>
  </data>
  <data name="NeedFillBusinessUnitCodes" xml:space="preserve">
    <value>Fill in the business unit codes.</value>
  </data>
  <data name="NeedFillDocumentKindCodes" xml:space="preserve">
    <value>Fill in the document kind codes.</value>
  </data>
  <data name="NumberFormatBUCode" xml:space="preserve">
    <value>[Business unit code]</value>
  </data>
  <data name="NumberFormatCaseFile" xml:space="preserve">
    <value>[Case file index]</value>
  </data>
  <data name="NumberFormatDepartmentCode" xml:space="preserve">
    <value>[Department code]</value>
  </data>
  <data name="NumberFormatDocKindCode" xml:space="preserve">
    <value>[Kind code]</value>
  </data>
  <data name="NumberFormatLeadingNumber" xml:space="preserve">
    <value>[Leading document number]</value>
  </data>
  <data name="NumberFormatLog" xml:space="preserve">
    <value>[Document register index]</value>
  </data>
  <data name="NumberFormatMonth" xml:space="preserve">
    <value>[Month]</value>
  </data>
  <data name="NumberFormatNumber" xml:space="preserve">
    <value>[Number]</value>
  </data>
  <data name="NumberFormatQuarter" xml:space="preserve">
    <value>[Quarter]</value>
  </data>
  <data name="NumberFormatRegistrPlace" xml:space="preserve">
    <value>[Group index]</value>
  </data>
  <data name="NumberFormatYear" xml:space="preserve">
    <value>[Year]</value>
  </data>
  <data name="ForDocumentNumberMustBeAttendRegisterGroup" xml:space="preserve">
    <value>Cannot use the registration group index in the number format for the "Numbering" document register kind.</value>
  </data>
  <data name="NotUniqueNumber" xml:space="preserve">
    <value>The row number must be unique.</value>
  </data>
  <data name="NumberFormatCounterpartyCode" xml:space="preserve">
    <value>[Counterparty code]</value>
  </data>
  <data name="NumberFormatDay" xml:space="preserve">
    <value>[Day]</value>
  </data>
</root>